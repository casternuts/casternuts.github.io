{"version":3,"sources":["webpack:///./src/pages/page-me.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Page.tsx","webpack:///./src/layouts/mainLayout.tsx"],"names":["PageMe","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts_mainLayout__WEBPACK_IMPORTED_MODULE_5__","_components_Page__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","StyledPage","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","Page","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","useStyles","makeStyles","theme","_drawer","_drawerPaperClose","_menuButton","root","display","mainLogo","padding","textDecoration","marginTop","marginBottom","fontSize","lineHeight","color","position","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","backgroundColor","appBarHeader","textAlign","menuButtonHidden","title","flexGrow","drawer","breakpoints","up","width","flexShrink","drawerPaper","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","spacing","appBarSpacer","content","height","overflow","paddingTop","paddingLeft","container","paddingBottom","paper","flexDirection","fixedHeight","menuButton","marginRight","mainlistItem","&:hover","&:active","menutab","textTransform","fontWeight","typography","fontWeightRegular","pxToRem","&:focus","opacity","menu","id","label","path","mainLayout","_public_static_d_1121164623_json__WEBPACK_IMPORTED_MODULE_3__","classes","_React$useState","useTheme","value","setValue","_React$useState2","mobileOpen","setMobileOpen","window","split","tabidx","filter","item","length","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_9__","gatsby__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_8__","component","variant","noWrap","site","siteMetadata","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_12__","selected","button","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_13__","primary","_material_ui_core_CssBaseline__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_Hidden__WEBPACK_IMPORTED_MODULE_15__","smUp","implementation","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_18__","_material_ui_core__WEBPACK_IMPORTED_MODULE_21__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_10__","aria-label","edge","onClick","_material_ui_icons_Menu__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_16__","onChange","event","newValue","navigate","centered","indicatorColor","map","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_17__","key","xsDown","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_6__","open"],"mappings":"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","file":"component---src-pages-page-me-tsx-70275f18e718a6a75e03.js","sourcesContent":["import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport Page from '../components/Page'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport MainLayout from '../layouts/mainLayout'\r\nconst PageMe = () => (\r\n  <MainLayout>\r\n    <Page>\r\n      <Container>\r\n        <h1>Hi from the PageThree page</h1>\r\n        <p>Welcome to page 3</p>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/a-markdown-page/\">Show me some Markdown!</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Take me back home.</Link>\r\n          </li>\r\n        </ul>\r\n      </Container>\r\n    </Page>\r\n  </MainLayout>\r\n)\r\n\r\nexport default PageMe\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport { dimensions } from '../styles/variables'\r\n\r\nconst StyledPage = styled.div`\r\n  display: block;\r\n  flex: 1;\r\n  position: relative;\r\n\r\n  padding: 0rem;\r\n  margin-bottom: 3rem;\r\n  background-color: #fff;\r\n`\r\n\r\ninterface PageProps {\r\n  className?: string\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\r\n\r\nexport default Page\r\n","import * as React from 'react'\r\n\r\nimport Helmet from 'react-helmet'\r\n\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nimport clsx from 'clsx'\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Drawer from '@material-ui/core/Drawer'\r\n\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\n//  import Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\n\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nimport { Link, navigate } from 'gatsby'\r\n\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles'\r\nimport { Toolbar } from '@material-ui/core'\r\n\r\nconst mainQuery = graphql`\r\n  query mainQuery {\r\n    allMarkdownRemark {\r\n      edges {\r\n        node {\r\n          excerpt(truncate: true, pruneLength: 200)\r\n          frontmatter {\r\n            title\r\n            path\r\n          }\r\n          id\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst drawerWidth = 300\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  mainLogo: {\r\n    padding: '0 2rem',\r\n    textDecoration: 'none',\r\n    marginTop: '1.75rem',\r\n    marginBottom: '1.75rem',\r\n    fontSize: '2rem',\r\n    lineHeight: '2rem',\r\n    color: '#212529',\r\n    display: 'block',\r\n    position: 'relative'\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar\r\n  },\r\n  appBar: {\r\n    // zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: '#fff',\r\n    color: '#000'\r\n  },\r\n  appBarHeader: {\r\n    textAlign: 'center',\r\n    fontSize: '33px',\r\n    padding: '10px'\r\n  },\r\n\r\n  menuButtonHidden: {\r\n    display: 'none'\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    }\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n    paddingTop: '80px',\r\n    paddingLeft: '20px',\r\n    backgroundColor: '#fff'\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column'\r\n  },\r\n  fixedHeight: {\r\n    height: 240\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  mainlistItem: {\r\n    backgroundColor: '#fff',\r\n    color: '#000',\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      backgroundColor: '#cccccc'\r\n    },\r\n    '&:active': {\r\n      backgroundColor: '#dddddd'\r\n    }\r\n  },\r\n  menutab: {\r\n    root: {\r\n      textTransform: 'none',\r\n      color: '#fff',\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      fontSize: theme.typography.pxToRem(15),\r\n      marginRight: theme.spacing(1),\r\n      '&:focus': {\r\n        opacity: 1\r\n      }\r\n    }\r\n  }\r\n}))\r\n\r\nconst menu = [\r\n  {\r\n    id: 0,\r\n    label: '게시물 목록',\r\n    path: '/'\r\n  },\r\n  {\r\n    id: 1,\r\n    label: '소개 입니다',\r\n    path: '/page-me/'\r\n  },\r\n  {\r\n    id: 2,\r\n    label: 'TAG',\r\n    path: '/page-tag/'\r\n  }\r\n]\r\nconst mainLayout: React.FC = ({ children }) => {\r\n  const data = useStaticQuery(mainQuery)\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const [value, setValue] = React.useState(0)\r\n\r\n  // console.log(window.location)\r\n  // tab을 위한 작업\r\n  const handleChange = (event: any, newValue: number) => {\r\n    let tabidx = menu.filter(item => item.id == newValue)\r\n    navigate(tabidx[0].path)\r\n  }\r\n  const [mobileOpen, setMobileOpen] = React.useState(false)\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen)\r\n  }\r\n  // tab이 눌려져있는 효과를 표현하기 위한 memohook\r\n  if (typeof window !== `undefined`) {\r\n    React.useMemo(() => {\r\n      if (location.pathname.split('/')[1] != '') {\r\n        let tabidx = menu.filter(item => item.path == '/' + location.pathname.split('/')[1] + '/')\r\n        if (tabidx.length > 0) setValue(tabidx[0].id)\r\n      } else {\r\n        //navigate('/')\r\n        setValue(0)\r\n      }\r\n    }, [value])\r\n  }\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <div>\r\n        <Link className={classes.mainLogo} to=\"/\">\r\n          <Typography component=\"h1\" variant=\"h5\" color=\"inherit\" noWrap className={classes.title}>\r\n            {data.site.siteMetadata.title}\r\n          </Typography>\r\n        </Link>\r\n        <List>\r\n          <div>\r\n            <Divider />\r\n            <Link to={'/'} className={classes.mainlistItem}>\r\n              <ListItem selected={value === 0} button>\r\n                <ListItemText primary=\"게시글 목록\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Divider />\r\n            <Link to={'/page-me/'} className={classes.mainlistItem}>\r\n              <ListItem selected={value === 1} button>\r\n                <ListItemText primary=\"소개\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to={'/page-tag/'} className={classes.mainlistItem}>\r\n              <ListItem selected={value === 2} button>\r\n                <ListItemText primary=\"태그\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Divider />\r\n          </div>\r\n        </List>\r\n      </div>\r\n    </div>\r\n  )\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Hidden smUp implementation=\"css\">\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"start\" onClick={handleDrawerToggle} className={classes.menuButton}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Responsive drawer\r\n            </Typography>\r\n          </Toolbar>\r\n\r\n          <Tabs variant=\"fullWidth\" value={value} onChange={handleChange} centered indicatorColor=\"primary\">\r\n            {menu.map(item => (\r\n              <Tab className={classes.menutab} key={item.id} label={item.label} />\r\n            ))}\r\n          </Tabs>\r\n        </AppBar>\r\n      </Hidden>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        {/* 작아졌을때 Drawer */}\r\n        {/* <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden> */}\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {children}\r\n      </main>\r\n    </div>\r\n    // <div className={classes.root}>\r\n    //   <CssBaseline />\r\n\r\n    //   <nav aria-label=\"mailbox folders\">\r\n    //     {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n\r\n    //     <Hidden smDown>\r\n    //       <div>\r\n    //         <Link className={classes.mainLogo} to=\"/\">\r\n    //           <Typography component=\"h1\" variant=\"h5\" color=\"inherit\" noWrap className={classes.title}>\r\n    //             {data.site.siteMetadata.title}\r\n    //           </Typography>\r\n    //         </Link>\r\n    //         <List>\r\n    //           <div>\r\n    //             <Divider />\r\n    //             <Link to={'/'} className={classes.mainlistItem}>\r\n    //               <ListItem selected={value === 0} button>\r\n    //                 <ListItemText primary=\"게시글 목록\" />\r\n    //               </ListItem>\r\n    //             </Link>\r\n    //             <Divider />\r\n    //             <Link to={'/page-me/'} className={classes.mainlistItem}>\r\n    //               <ListItem selected={value === 1} button>\r\n    //                 <ListItemText primary=\"소개\" />\r\n    //               </ListItem>\r\n    //             </Link>\r\n    //             <Link to={'/page-tag/'} className={classes.mainlistItem}>\r\n    //               <ListItem selected={value === 2} button>\r\n    //                 <ListItemText primary=\"태그\" />\r\n    //               </ListItem>\r\n    //             </Link>\r\n    //             <Divider />\r\n    //           </div>\r\n    //         </List>\r\n    //       </div>\r\n    //     </Hidden>\r\n    //   </nav>\r\n    //   <main className={classes.content}>\r\n    //     <div className={classes.toolbar} />\r\n    //     <Hidden mdUp>\r\n    //       <div className={classes.appBar}>\r\n    //         <div className={classes.appBarHeader}>\r\n    //           <IconButton style={{ float: 'left' }} aria-label=\"delete\">\r\n    //             <MenuIcon />\r\n    //           </IconButton>\r\n    //           <IconButton style={{ float: 'right' }} aria-label=\"delete\">\r\n    //             <MenuIcon />\r\n    //           </IconButton>\r\n\r\n    //           <Typography variant=\"h4\">{data.site.siteMetadata.title}</Typography>\r\n    //         </div>\r\n\r\n    //         <Tabs variant=\"fullWidth\" value={value} onChange={handleChange} centered indicatorColor=\"primary\">\r\n    //           {menu.map(item => (\r\n    //             <Tab className={classes.menutab} key={item.id} label={item.label} />\r\n    //           ))}\r\n    //         </Tabs>\r\n    //       </div>\r\n    //       <Divider></Divider>\r\n    //     </Hidden>\r\n    //     {children}\r\n    //   </main>\r\n    // </div>\r\n\r\n    // <div className={classes.root}>\r\n    //   <Helmet\r\n    //     title={data.site.siteMetadata.title}\r\n    //     meta={[\r\n    //       { name: 'description', content: data.site.siteMetadata.description },\r\n    //       { name: 'keywords', content: data.site.siteMetadata.keywords }\r\n    //     ]}\r\n    //   />\r\n\r\n    //       <Hidden smDown>\r\n    //         <Drawer\r\n    //       variant=\"permanent\"\r\n    //       classes={{\r\n    //         paper: clsx(classes.drawerPaper)\r\n    //       }}\r\n    //       open={true}\r\n    //     >\r\n    // <div>\r\n    //   <Link className={classes.mainLogo} to=\"/\">\r\n    //     <Typography component=\"h1\" variant=\"h5\" color=\"inherit\" noWrap className={classes.title}>\r\n    //       {data.site.siteMetadata.title}\r\n    //     </Typography>\r\n    //   </Link>\r\n    //   <List>\r\n    //     <div>\r\n    //       <Divider />\r\n    //       <Link to={'/'} className={classes.mainlistItem}>\r\n    //         <ListItem selected={value === 0} button>\r\n    //           <ListItemText primary=\"게시글 목록\" />\r\n    //         </ListItem>\r\n    //       </Link>\r\n    //       <Divider />\r\n    //       <Link to={'/page-me/'} className={classes.mainlistItem}>\r\n    //         <ListItem selected={value === 1} button>\r\n    //           <ListItemText primary=\"소개\" />\r\n    //         </ListItem>\r\n    //       </Link>\r\n    //       <Link to={'/page-tag/'} className={classes.mainlistItem}>\r\n    //         <ListItem selected={value === 2} button>\r\n    //           <ListItemText primary=\"태그\" />\r\n    //         </ListItem>\r\n    //       </Link>\r\n    //       <Divider />\r\n    //     </div>\r\n    //   </List>\r\n    // </div>\r\n\r\n    //          </Drawer>\r\n    //       </Hidden>\r\n\r\n    //       <main className={classes.content}>\r\n    //         <Hidden mdUp>\r\n    //           <div className={classes.appBar}>\r\n    //             <div className={classes.appBarHeader}>\r\n    //               <IconButton style={{ float: 'left' }} aria-label=\"delete\">\r\n    //                 <MenuIcon />\r\n    //               </IconButton>\r\n    //               <IconButton style={{ float: 'right' }} aria-label=\"delete\">\r\n    //                 <MenuIcon />\r\n    //               </IconButton>\r\n\r\n    //               <Typography variant=\"h4\">{data.site.siteMetadata.title}</Typography>\r\n    //             </div>\r\n\r\n    //             <Tabs variant=\"fullWidth\" value={value} onChange={handleChange} centered indicatorColor=\"primary\">\r\n    //               {menu.map(item => (\r\n    //                 <Tab className={classes.menutab} key={item.id} label={item.label} />\r\n    //               ))}\r\n    //             </Tabs>\r\n    //           </div>\r\n    //           <Divider></Divider>\r\n    //         </Hidden>\r\n    //         {children}\r\n    //       </main>\r\n    //     </div>\r\n  )\r\n}\r\n\r\nexport default mainLayout\r\n"],"sourceRoot":""}