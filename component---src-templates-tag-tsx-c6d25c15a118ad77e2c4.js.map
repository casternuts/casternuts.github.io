{"version":3,"sources":["webpack:///./src/templates/tag.tsx"],"names":["tagTemplate","_ref","data","console","log","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_layouts_mainLayout__WEBPACK_IMPORTED_MODULE_5__","_components_Page__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","variant","gutterBottom","gatsby__WEBPACK_IMPORTED_MODULE_3__","style","textDecoration","to","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","width","display","float","window","location","pathname","split","allMarkdownRemark","nodes","map","node","_components_PostList__WEBPACK_IMPORTED_MODULE_9__","key","id","query"],"mappings":"+NA+DeA,UA/BiC,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEjD,OADAC,QAAQC,IAAIF,GAEVG,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,KACEH,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,KACEJ,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GACnCP,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAMC,MAAO,CAAEC,eAAgB,QAAUC,GAAI,cAA7C,mBAIFX,OAAAC,EAAA,EAAAD,CAACY,EAAA,EAAD,OAEFZ,OAAAC,EAAA,EAAAD,CAAA,OAAKS,MAAO,CAAEI,MAAO,OAAQC,QAAS,iBACpCd,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,MAAIS,MAAO,CAAEM,MAAO,SAApB,SAAqC,oBAAOC,QAA0BA,OAAOC,UAAYA,SAASC,SAASC,MAAM,KAAK,MAI1HnB,OAAAC,EAAA,EAAAD,CAAA,UACGH,EAAKuB,kBAAkBC,MAAMC,IAAI,SAAAC,GAChC,OAAOvB,OAAAC,EAAA,EAAAD,CAACwB,EAAA,EAAD,CAAUC,IAAKF,EAAKG,GAAI7B,KAAM0B,WAY5C,IAAMI,EAAK","file":"component---src-templates-tag-tsx-c6d25c15a118ad77e2c4.js","sourcesContent":["import * as React from 'react'\r\nimport { graphql, Link } from 'gatsby'\r\n\r\nimport Post from '../components/Post'\r\nimport Page from '../components/Page'\r\n\r\n// import Container from '../components/Container'\r\nimport MainLayout from '../layouts/mainLayout'\r\nimport Container from '@material-ui/core/Container'\r\nimport { Chip, Divider, Typography } from '@material-ui/core'\r\nimport PostList from '../components/PostList'\r\ninterface TagTemplateProps {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      totalCount: number\r\n      nodes: [\r\n        {\r\n          frontmatter: {\r\n            category: string\r\n            path: string\r\n            tag: string\r\n            title: string\r\n            date: string\r\n          }\r\n          id: string\r\n          excerpt: string\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nconst tagTemplate: React.FC<TagTemplateProps> = ({ data }) => {\r\n  console.log(data)\r\n  return (\r\n    <MainLayout>\r\n      <Page>\r\n        <Container>\r\n          <div>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              <Link style={{ textDecoration: 'none' }} to={'/page-tag/'}>\r\n                ← 태그 목록으로 돌아가기\r\n              </Link>\r\n            </Typography>\r\n            <Divider></Divider>\r\n          </div>\r\n          <div style={{ width: '100%', display: 'inline-block' }}>\r\n            <div>\r\n              <h1 style={{ float: 'left' }}> Tag #{typeof window !== `undefined` && window.location && location.pathname.split('/')[2]}</h1>\r\n            </div>\r\n          </div>\r\n\r\n          <ul>\r\n            {data.allMarkdownRemark.nodes.map(node => {\r\n              return <PostList key={node.id} data={node}></PostList>\r\n            })}\r\n          </ul>\r\n        </Container>\r\n      </Page>\r\n    </MainLayout>\r\n  )\r\n}\r\n\r\nexport default tagTemplate\r\n\r\n//알아서 주소를 파싱해 값으로 던져준다.\r\nexport const query = graphql`\r\n  query tagTemplateQuery($fieldValue: String!) {\r\n    allMarkdownRemark(filter: { frontmatter: { tag: { eq: $fieldValue } } }) {\r\n      totalCount\r\n      nodes {\r\n        frontmatter {\r\n          category\r\n          path\r\n          tag\r\n          title\r\n          date\r\n        }\r\n        id\r\n        excerpt(truncate: true, pruneLength: 200)\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}