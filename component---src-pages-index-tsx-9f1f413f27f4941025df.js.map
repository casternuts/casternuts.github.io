{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Page.tsx","webpack:///./src/layouts/mainLayout.tsx","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./src/components/PostList.tsx"],"names":["IndexPage","data","_public_static_d_3435800654_json__WEBPACK_IMPORTED_MODULE_1__","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts_mainLayout__WEBPACK_IMPORTED_MODULE_4__","_components_Page__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_5__","style","paddingLeft","allMarkdownRemark","edges","map","_ref","node","_components_PostList__WEBPACK_IMPORTED_MODULE_6__","key","id","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","StyledPage","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","Page","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","useStyles","makeStyles","theme","_drawer","_drawerPaperClose","_menuButton","root","display","paperFlex","justifyContent","flexWrap","padding","spacing","mainLogo","textDecoration","marginTop","marginBottom","fontSize","lineHeight","color","position","toolbar","paddingRight","toolbarIcon","alignItems","mixins","appBar","backgroundColor","appBarHeader","textAlign","menuButtonHidden","title","flexGrow","drawer","breakpoints","up","width","flexShrink","drawerPaper","whiteSpace","overflowX","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","leavingScreen","appBarSpacer","content","height","overflow","paddingTop","container","paddingBottom","paper","flexDirection","fixedHeight","menuButton","marginRight","mainlistItemSelected","borderRight","borderStyle","fontWeight","mainlistItem","&:hover","&:active","mainlist","menutab","textTransform","typography","fontWeightRegular","pxToRem","&:focus","opacity","copyright","menu","label","path","mainLayout","_public_static_d_873114913_json__WEBPACK_IMPORTED_MODULE_3__","classes","_React$useState","value","setValue","console","log","buttonClick","navigate","window","split","tabidx","filter","item","length","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","site","siteMetadata","meta","description","keywords","_material_ui_core_Hidden__WEBPACK_IMPORTED_MODULE_15__","smDown","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_7__","variant","clsx","open","gatsby__WEBPACK_IMPORTED_MODULE_14__","to","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_9__","component","noWrap","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_12__","selected","button","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_13__","primary","bottom","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_21__","_material_ui_core_CardHeader__WEBPACK_IMPORTED_MODULE_22__","avatar","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_20__","aria-label","action","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_11__","subheader","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_19__","float","href","_material_ui_icons_GitHub__WEBPACK_IMPORTED_MODULE_23___default","onClick","_material_ui_icons_Info__WEBPACK_IMPORTED_MODULE_24___default","mdUp","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_16__","onChange","event","newValue","centered","indicatorColor","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_17__","CardActions_CardActions","react_default","forwardRef","ref","_props$disableSpacing","disableSpacing","other","objectWithoutProperties","esm_extends","clsx_m","esm_CardActions_CardActions","withStyles","& > :not(:first-child)","marginLeft","CardContent_CardContent","_props$component","Component","esm_CardContent_CardContent","&:last-child","card","minWidth","pos","PostList","core_browser_esm","Card","margin","Typography","gutterBottom","frontmatter","category","gatsby_browser_entry","date","Divider","excerpt","Chip","tag"],"mappings":"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","file":"component---src-pages-index-tsx-9f1f413f27f4941025df.js","sourcesContent":["import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport Page from '../components/Page'\r\n// import Container from '../components/Container'\r\nimport MainLayout from '../layouts/mainLayout'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n///\r\nimport clsx from 'clsx'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Box from '@material-ui/core/Box'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\n// import Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport styled from '@emotion/styled'\r\nimport { heights, dimensions, colors } from '../styles/variables'\r\n///\r\nimport { Router } from '@reach/router'\r\nimport PostList from '../components/PostList'\r\n\r\nconst mainIndexQuery = graphql`\r\n  query mainIndexQuery {\r\n    allMarkdownRemark(filter: { frontmatter: { about: { nin: \"about\" } } }) {\r\n      edges {\r\n        node {\r\n          excerpt(truncate: true, pruneLength: 200)\r\n          frontmatter {\r\n            title\r\n            path\r\n            date(locale: \"\")\r\n            tag\r\n            category\r\n          }\r\n          id\r\n        }\r\n      }\r\n      totalCount\r\n      pageInfo {\r\n        itemCount\r\n        pageCount\r\n        hasPreviousPage\r\n        hasNextPage\r\n        currentPage\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst IndexPage: React.FC = () => {\r\n  const data = useStaticQuery(mainIndexQuery)\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Page>\r\n        <Container>\r\n          <div>\r\n            <h2>게시글 목록</h2>\r\n          </div>\r\n          <ul style={{ paddingLeft: '5px' }}>\r\n            {data.allMarkdownRemark.edges.map(({ node }: any) => (\r\n              <PostList key={node.id} data={node}></PostList>\r\n        \r\n            ))}\r\n          </ul>\r\n        </Container>\r\n      </Page>\r\n    </MainLayout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport { dimensions } from '../styles/variables'\r\n\r\nconst StyledPage = styled.div`\r\n  display: block;\r\n  flex: 1;\r\n  position: relative;\r\n\r\n  padding: 1rem;\r\n  margin-bottom: 3rem;\r\n  background-color: #f1f3f5;\r\n`\r\n\r\ninterface PageProps {\r\n  className?: string\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\r\n\r\nexport default Page\r\n","import * as React from 'react'\r\n\r\nimport Helmet from 'react-helmet'\r\n\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nimport clsx from 'clsx'\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Drawer from '@material-ui/core/Drawer'\r\n\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\n//  import Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\n\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nimport { Link, navigate } from 'gatsby'\r\n\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\n\r\n//nin 으로 이력서는 출력 안되게 했음\r\nconst mainQuery = graphql`\r\n  query mainQuery {\r\n    allMarkdownRemark(filter: { frontmatter: { about: { nin: \"about\" } } }) {\r\n      edges {\r\n        node {\r\n          excerpt(truncate: true, pruneLength: 200)\r\n          frontmatter {\r\n            title\r\n            path\r\n          }\r\n          id\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst drawerWidth = 300\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  paperFlex: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: theme.spacing(0.5)\r\n  },\r\n  mainLogo: {\r\n    padding: '0 2rem',\r\n    textDecoration: 'none',\r\n    marginTop: '1.75rem',\r\n    marginBottom: '1.75rem',\r\n    fontSize: '2rem',\r\n    lineHeight: '2rem',\r\n    color: '#212529',\r\n    display: 'block',\r\n    position: 'relative'\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar\r\n  },\r\n  appBar: {\r\n    // zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: '#fff',\r\n    color: '#000'\r\n  },\r\n  appBarHeader: {\r\n    textAlign: 'center',\r\n    fontSize: '33px',\r\n    padding: '10px'\r\n  },\r\n\r\n  menuButtonHidden: {\r\n    display: 'none'\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    }\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    overflowX: 'hidden',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n    paddingTop: '0px',\r\n    paddingLeft: '0px',\r\n    backgroundColor: '#f1f3f5'\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column'\r\n  },\r\n  fixedHeight: {\r\n    height: 240\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  mainlistItemSelected: {\r\n    borderRight: '#0095da !important',\r\n    borderStyle: 'groove !important',\r\n    backgroundColor: '#fff !important',\r\n    color: '#0095da',\r\n    fontWeight: 'bold'\r\n  },\r\n  mainlistItem: {\r\n    '&:hover': {\r\n      borderRight: '#0095da !important',\r\n      borderStyle: 'groove !important'\r\n    },\r\n    '&:active': {\r\n      borderRight: '#0095da',\r\n      borderStyle: 'groove'\r\n    }\r\n  },\r\n  mainlist: {\r\n    backgroundColor: '#fff',\r\n    color: '#000',\r\n    textDecoration: 'none'\r\n  },\r\n  menutab: {\r\n    root: {\r\n      textTransform: 'none',\r\n      color: '#fff',\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      fontSize: theme.typography.pxToRem(15),\r\n      marginRight: theme.spacing(1),\r\n      '&:focus': {\r\n        opacity: 1\r\n      }\r\n    }\r\n  },\r\n  copyright: {\r\n    color: '#cccccc',\r\n    fontSize: '16px',\r\n    fontWeight: 600,\r\n    textAlign: 'center'\r\n  }\r\n}))\r\n\r\nconst menu = [\r\n  {\r\n    id: 0,\r\n    label: '게시물 목록',\r\n    path: '/'\r\n  },\r\n  {\r\n    id: 1,\r\n    label: '소개 입니다',\r\n    path: '/page-me/'\r\n  },\r\n  {\r\n    id: 2,\r\n    label: 'TAG',\r\n    path: '/page-tag/'\r\n  }\r\n]\r\nconst mainLayout: React.FC = ({ children }) => {\r\n  const data = useStaticQuery(mainQuery)\r\n  const classes = useStyles()\r\n  const [value, setValue] = React.useState(0)\r\n  console.log(data)\r\n  // console.log(window.location)\r\n  // tab을 위한 작업\r\n  const handleChange = (event: any, newValue: number) => {\r\n    let tabidx = menu.filter(item => item.id == newValue)\r\n    navigate(tabidx[0].path)\r\n  }\r\n  const buttonClick = (value: any) => {\r\n    console.log(value)\r\n    if (value) navigate(value)\r\n  }\r\n  // tab이 눌려져있는 효과를 표현하기 위한 memohook\r\n  if (typeof window !== `undefined`) {\r\n    React.useMemo(() => {\r\n      if (location.pathname.split('/')[1] != '') {\r\n        let tabidx = menu.filter(item => item.path == '/' + location.pathname.split('/')[1] + '/')\r\n        if (tabidx.length > 0) setValue(tabidx[0].id)\r\n      } else {\r\n        //navigate('/')\r\n        setValue(0)\r\n      }\r\n    }, [value])\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Helmet\r\n        title={data.site.siteMetadata.title}\r\n        meta={[\r\n          { name: 'description', content: data.site.siteMetadata.description },\r\n          { name: 'keywords', content: data.site.siteMetadata.keywords }\r\n        ]}\r\n      />\r\n\r\n      <Hidden smDown>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper)\r\n          }}\r\n          open={true}\r\n        >\r\n          <div>\r\n            <Link className={classes.mainLogo} to=\"/\">\r\n              <Typography component=\"h1\" variant=\"h5\" color=\"inherit\" noWrap className={classes.title}>\r\n                {data.site.siteMetadata.title}\r\n              </Typography>\r\n            </Link>\r\n            <List>\r\n              <div>\r\n                <Link to={'/'} className={classes.mainlist}>\r\n                  <ListItem classes={{ root: classes.mainlistItem, selected: classes.mainlistItemSelected }} selected={value === 0} button>\r\n                    <ListItemText primary=\"게시글 목록\" />\r\n                  </ListItem>\r\n                </Link>\r\n\r\n                <Link to={'/page-me/'} className={classes.mainlist}>\r\n                  <ListItem classes={{ root: classes.mainlistItem, selected: classes.mainlistItemSelected }} selected={value === 1} button>\r\n                    <ListItemText primary=\"소개\" />\r\n                  </ListItem>\r\n                </Link>\r\n                <Link to={'/page-tag/'} className={classes.mainlist}>\r\n                  <ListItem classes={{ root: classes.mainlistItem, selected: classes.mainlistItemSelected }} selected={value === 2} button>\r\n                    <ListItemText primary=\"태그\" />\r\n                  </ListItem>\r\n                </Link>\r\n              </div>\r\n            </List>\r\n          </div>\r\n          <div style={{ width: drawerWidth, position: 'absolute', bottom: '0px' }}>\r\n            <Divider></Divider>\r\n            <div style={{ textAlign: 'center' }}>\r\n              {/* <Avatar style={{ width: '100px', height: '100px', margin: 'auto' }}>C</Avatar> */}\r\n              <Card>\r\n                <CardHeader\r\n                  avatar={<Avatar aria-label=\"recipe\">C</Avatar>}\r\n                  action={<IconButton aria-label=\"settings\"></IconButton>}\r\n                  title=\"Written by @Casternuts\"\r\n                  subheader=\"일상 기록 및 개발 관련 포스팅\"\r\n                />\r\n\r\n                <Paper className={classes.paperFlex}>\r\n                  <IconButton style={{ float: 'left' }} aria-label=\"github\" href={'https://github.com/casternuts'}>\r\n                    <GitHubIcon />\r\n                  </IconButton>\r\n                  <IconButton style={{ float: 'left' }} aria-label=\"resume\" onClick={() => buttonClick('/page-me/')}>\r\n                    <InfoIcon />\r\n                  </IconButton>\r\n\r\n                  <div className={classes.copyright}>© 2020 casternuts Dev Blog</div>\r\n                </Paper>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n      </Hidden>\r\n\r\n      <main className={classes.content}>\r\n        <Hidden mdUp>\r\n          <div className={classes.appBar}>\r\n            <div className={classes.appBarHeader}>\r\n              <IconButton style={{ float: 'left' }} aria-label=\"github\" href={'https://github.com/casternuts'}>\r\n                <GitHubIcon />\r\n              </IconButton>\r\n              <IconButton style={{ float: 'right' }} aria-label=\"resume\" onClick={() => buttonClick('/page-me/')}>\r\n                <InfoIcon />\r\n              </IconButton>\r\n\r\n              <Typography variant=\"h4\">{data.site.siteMetadata.title}</Typography>\r\n            </div>\r\n\r\n            <Tabs variant=\"fullWidth\" value={value} onChange={handleChange} centered indicatorColor=\"primary\">\r\n              {menu.map(item => (\r\n                <Tab className={classes.menutab} key={item.id} label={item.label} />\r\n              ))}\r\n            </Tabs>\r\n          </div>\r\n          <Divider></Divider>\r\n        </Hidden>\r\n        <div>{children}</div>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default mainLayout\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Chip, Divider, Typography } from '@material-ui/core'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    minWidth: 275\r\n  },\r\n\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n})\r\ninterface PostListProps {\r\n  data: {\r\n    id: string\r\n    frontmatter: {\r\n      category: string\r\n      path: string\r\n      tag: string\r\n      title: string\r\n      date: string\r\n    }\r\n    excerpt: string\r\n  }\r\n}\r\n\r\nconst PostList: React.FC<PostListProps> = ({ data }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card style={{ margin: '10px' }} className={classes.card}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"primary\" gutterBottom>\r\n          {data.frontmatter.category}\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          <Link style={{ textDecoration: 'none' }} to={data.frontmatter.path}>\r\n            {data.frontmatter.title}\r\n          </Link>\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" className={classes.pos} color=\"textSecondary\">\r\n          {data.frontmatter.date}\r\n        </Typography>\r\n        <Divider style={{ margin: '10px 0px' }}></Divider>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {data.excerpt}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Chip color=\"primary\" label={data.frontmatter.tag}></Chip>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PostList\r\n"],"sourceRoot":""}