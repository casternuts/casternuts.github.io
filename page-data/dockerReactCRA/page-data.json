{"componentChunkName":"component---src-templates-page-tsx","path":"/dockerReactCRA/","webpackCompilationHash":"4b154bd1afc0d38af28a","result":{"data":{"site":{"siteMetadata":{"title":"Casternuts Log","description":"casternuts의 블로그 입니다.","author":{"name":"casternuts","url":"https://github.com/casternuts"}}},"markdownRemark":{"html":"<h3 id=\"도커로-create-react-app을-이미지화-해서-실행-시켜보자\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%BB%A4%EB%A1%9C-create-react-app%EC%9D%84-%EC%9D%B4%EB%AF%B8%EC%A7%80%ED%99%94-%ED%95%B4%EC%84%9C-%EC%8B%A4%ED%96%89-%EC%8B%9C%EC%BC%9C%EB%B3%B4%EC%9E%90\" aria-label=\"도커로 create react app을 이미지화 해서 실행 시켜보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도커로 Create react App을 이미지화 해서 실행 시켜보자</h3>\n<ul>\n<li>본 글은 CRA 2.0 이상으로 생성된 APP 기준으로 설명 합니다.\n<a href=\"https://mherman.org/blog/dockerizing-a-react-app/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://mherman.org/blog/dockerizing-a-react-app/</a> 을 읽고 나름대로 실습 한 후 정리한 걸 적어 두었습니다.</li>\n</ul>\n<p>도커를 윈도우에서 쓰기 위해선 Hyper-v 가 설정되어있어야 한다.\n이러한 방법은 윈도우10 pro 버전에서 설치 가능하다. 만약 가상화가 지원 되지 않는다면 Docker toolbox를 이용해 설치하는 방법이 있다.</p>\n<ol>\n<li>\n<p>Create react-app 으로 리액트 app을 만든다.</p>\n</li>\n<li>\n<p>프로젝트 최 상단에 Dockerfile 작성</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># alpine 이미지는 상대적으로 용량이 작다\nFROM node:12.2.0-alpine\n\n# set working directory\nWORKDIR /app\n\n# 생성될 도커이미지의 환경 변수 경로를 설정한다.\nENV PATH /app/node_modules/.bin:$PATH\n\n# /app은 도커이미지의 최상단 경로이므로 package.json을 동일한 위치에 두기 위해 카피한다.\nCOPY package.json /app/package.json\n# package.json 을 기준으로 node_module을 다운로드 한다.\n# --silent는 로그가 안나오게끔 하는 옵션이다.\nRUN npm install --silent\nRUN npm install react-scripts@3.0.1 -g --silent\n\n# 이후 앱을 실행 하기 위한 npm 명령어를 입력한다.\nCMD [&quot;npm&quot;, &quot;start&quot;]</code></pre></div>\n<ol start=\"3\">\n<li>.dockerignore 파일을 작성 한다</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_modules</code></pre></div>\n<p>4.docker 이미지 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker build -t &#39;이미지명&#39; .</code></pre></div>\n<ol start=\"5\">\n<li>docker run</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## 리눅스 및 Mac\ndocker run -v ${PWD}:/app -v /app/node_modules -p 3001:3000 --rm &#39;이미지명&#39;\n## 윈도우\ndocker run -v %cd%:/app -v /app/node_modules -p 3001:3000 --rm &#39;이미지명&#39;</code></pre></div>\n<ul>\n<li>\n<p>-v ${PWD}:/app 은 컨테이너 ‘/app’ 경로에 마운트 한다.</p>\n</li>\n<li>\n<p>컨테이너 안에있는 node<em>modules를 사용하고 싶다면\n`-v /app/node</em>modules` 옵션을 사용한다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">-p 3001:3000</code> 는 컨테이너 내부에서 3000포트로 돌고 있는 App을 외부 포트 3001에 Mapping해 접근 가능하게 한다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">--rm</code> 명령어는 컨테이너와 외부 정의된 volume을 컨테이너 종료시 지운다.</p>\n</li>\n<li>\n<p>localhost:3001 로 접속 해 정상적으로 실행되는지 확인 한다.</p>\n</li>\n</ul>\n<h2 id=\"docker-compose를-이용한-방법\" style=\"position:relative;\"><a href=\"#docker-compose%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B0%A9%EB%B2%95\" aria-label=\"docker compose를 이용한 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker-compose를 이용한 방법</h2>\n<ol>\n<li>프로젝트 상단에 docker-compose.yml 파일을 생성한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">version: &#39;3.7&#39;\n\nservices:\n\n  sample:\n    container_name: sample\n    build:\n      context: .\n      dockerfile: Dockerfile\n    volumes:\n      - &#39;.:/app&#39;\n      - &#39;/app/node_modules&#39;\n    ports:\n      - &#39;3001:3000&#39;\n    environment:\n      - NODE_ENV=development</code></pre></div>\n<ul>\n<li>\n<p>해당 파일은 기존에 인라인으로 실행시키던 부분을 미리 정의해둔 파일이다</p>\n</li>\n<li>\n<p>docker-compose로 빌드 및 바로 실행</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose up -d --build</code></pre></div>\n<ol start=\"3\">\n<li>docker-compose를 중지 하고 싶을때</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker-compose stop</code></pre></div>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며</h2>\n<p>Docker를 예전부터 들어서 어떤 역할인지 알고는 있었지만 직접 이용해서 이미지화-> 실행을 한적은 없었던 것 같다.</p>\n<p>리액트+nginx 구조로 많이 쓰는 것 같은데 다음번엔 nginx까지 연결해서 한번 해봐야 겠다.</p>\n<p>쿠버네티스는 공부 해봤는데 개념은 이해 가지만 대 고객 서비스의 트래픽이 많지 않으면 쓸일이 많이 없을 것 같다. 도커에 더욱 익숙해져서 개발환경에 대한 스트레스를 날려야 겠다.</p>\n<p><code class=\"language-text\">-v /app/node_modules</code> 부분이 잘 이해가 안가는데 불륨 관련된 부분을 다시 봐야겠다</p>\n<h1/>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<h4 id=\"httpsmhermanorgblogdockerizing-a-react-app\" style=\"position:relative;\"><a href=\"#httpsmhermanorgblogdockerizing-a-react-app\" aria-label=\"httpsmhermanorgblogdockerizing a react app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://mherman.org/blog/dockerizing-a-react-app/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://mherman.org/blog/dockerizing-a-react-app/</a></h4>","excerpt":"도커로 Create react App을 이미지화 해서 실행 시켜보자본 글은 CRA 2.0 이상으로 생성된 APP 기준으로 설명 합니다.\nhttps://mherman.org/blog/dockerizing-a-react-app…","frontmatter":{"title":"도커로 Create react App을 이미지화 해서 실행 시키기","date":"2020-01-22 15:54","tag":"Docker","path":"/dockerReactCRA","layout":"page","category":"dev"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/dockerReactCRA/"}}}